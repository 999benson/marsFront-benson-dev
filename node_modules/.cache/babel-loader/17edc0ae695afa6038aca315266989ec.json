{"ast":null,"code":"var _jsxFileName = \"/Users/benson/NASA-Mars-Rover/marsFrontGroup/src/pages/Filter.js\";\nimport React from \"react\";\nimport \"../style/Filter.css\";\nimport SelectRover from \"../components/SelectRover\";\nimport SelectCamera from \"../components/SelectCamera\"; // import SelectSol from \"../components/SelectSol\";\n\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Filter(_ref) {\n  let {\n    imgs,\n    isCButtonActive,\n    isOButtonActive,\n    isSButtonActive,\n    handleCButton,\n    handleOButton,\n    handleSButton,\n    handleSelectOption,\n    handleSubmitData // handleSolDay,\n\n  } = _ref;\n  // const [isCButtonActive, setCButtonActive] = useState(false);\n  // const [isOButtonActive, setOButtonActive] = useState(false);\n  // const [isSButtonActive, setSButtonActive] = useState(false);\n  // const [camera, setCamera] = useState({\n  //   Curiosity: [],\n  //   Opportunity: [],\n  //   Spirit: [],\n  // });\n  // // console.log(\"camera\", camera);\n  // /**\n  //  * handleSelectOption function handles the form of the selected cameras in \"SelectCamera.js\" component\n  //  * @param {*} e is event\n  //  */\n  // const handleSelectOption = (e) => {\n  //   const { name, checked } = e.target;\n  //   // const { Curiosity, Opportunity, Spirit} = camera;\n  //   console.log(`${name} is ${checked}`);\n  //   // Case 1 : The user checks the box\n  //   if (checked) {\n  //     if (isCButtonActive) {\n  //       setCamera({ ...camera, Curiosity: [...camera.Curiosity, name] });\n  //     }\n  //     if (isOButtonActive) {\n  //       setCamera({ ...camera, Opportunity: [...camera.Opportunity, name] });\n  //     }\n  //     if (isSButtonActive) {\n  //       setCamera({ ...camera, Spirit: [...camera.Spirit, name] });\n  //     }\n  //   }\n  //   // Case 2  : The user unchecks the box\n  //   else {\n  //     setCamera({\n  //       Curiosity: camera.Curiosity.filter((e) => e !== name),\n  //       Opportunity: camera.Opportunity.filter((e) => e !== name),\n  //       Spirit: camera.Spirit.filter((e) => e !== name),\n  //     });\n  //   }\n  // };\n  // const handleSubmitData = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted values\", camera);\n  // };\n  // /** handle button functions toggle button activation when Rovers are selected or deselected */\n  // const handleCButton = () => {\n  //   isCButtonActive ? setCButtonActive(false) : setCButtonActive(true);\n  // };\n  // const handleOButton = () => {\n  //   isOButtonActive ? setOButtonActive(false) : setOButtonActive(true);\n  // };\n  // const handleSButton = () => {\n  //   isSButtonActive ? setSButtonActive(false) : setSButtonActive(true);\n  // };\n  //functions passed as props to children components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Filter\",\n    children: [/*#__PURE__*/_jsxDEV(SelectRover, {\n      isCButtonActive: isCButtonActive,\n      isOButtonActive: isOButtonActive,\n      isSButtonActive: isSButtonActive,\n      handleCButton: handleCButton,\n      handleOButton: handleOButton,\n      handleSButton: handleSButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectCamera, {\n      imgs: imgs,\n      isCButtonActive: isCButtonActive,\n      isOButtonActive: isOButtonActive,\n      isSButtonActive: isSButtonActive,\n      handleSelectOption: handleSelectOption,\n      handleSubmitData: handleSubmitData // handleSolDay={handleSolDay}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Filter;\nFilter.propTypes = {\n  imgs: PropTypes.array.isRequired,\n  isCButtonActive: PropTypes.bool.isRequired,\n  isOButtonActive: PropTypes.bool.isRequired,\n  isSButtonActive: PropTypes.bool.isRequired,\n  handleCButton: PropTypes.func.isRequired,\n  handleOButton: PropTypes.func.isRequired,\n  handleSButton: PropTypes.func.isRequired,\n  handleSelectOption: PropTypes.func.isRequired,\n  handleSubmitData: PropTypes.func.isRequired // handleSolDay: PropTypes.func.isRequired,\n\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/benson/NASA-Mars-Rover/marsFrontGroup/src/pages/Filter.js"],"names":["React","SelectRover","SelectCamera","PropTypes","Filter","imgs","isCButtonActive","isOButtonActive","isSButtonActive","handleCButton","handleOButton","handleSButton","handleSelectOption","handleSubmitData","propTypes","array","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,MAAT,OAWG;AAAA,MAXa;AACdC,IAAAA,IADc;AAEdC,IAAAA,eAFc;AAGdC,IAAAA,eAHc;AAIdC,IAAAA,eAJc;AAKdC,IAAAA,aALc;AAMdC,IAAAA,aANc;AAOdC,IAAAA,aAPc;AAQdC,IAAAA,kBARc;AASdC,IAAAA,gBATc,CAUd;;AAVc,GAWb;AACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,eAAe,EAAEP,eADnB;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAGE,MAAA,eAAe,EAAEC,eAHnB;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,aAAa,EAAEC,aALjB;AAME,MAAA,aAAa,EAAEC;AANjB;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAGE,MAAA,eAAe,EAAEC,eAHnB;AAIE,MAAA,eAAe,EAAEC,eAJnB;AAKE,MAAA,kBAAkB,EAAEI,kBALtB;AAME,MAAA,gBAAgB,EAAEC,gBANpB,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAhGQT,M;AAkGTA,MAAM,CAACU,SAAP,GAAmB;AACjBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,KAAV,CAAgBC,UADL;AAEjBV,EAAAA,eAAe,EAAEH,SAAS,CAACc,IAAV,CAAeD,UAFf;AAGjBT,EAAAA,eAAe,EAAEJ,SAAS,CAACc,IAAV,CAAeD,UAHf;AAIjBR,EAAAA,eAAe,EAAEL,SAAS,CAACc,IAAV,CAAeD,UAJf;AAKjBP,EAAAA,aAAa,EAAEN,SAAS,CAACe,IAAV,CAAeF,UALb;AAMjBN,EAAAA,aAAa,EAAEP,SAAS,CAACe,IAAV,CAAeF,UANb;AAOjBL,EAAAA,aAAa,EAAER,SAAS,CAACe,IAAV,CAAeF,UAPb;AAQjBJ,EAAAA,kBAAkB,EAAET,SAAS,CAACe,IAAV,CAAeF,UARlB;AASjBH,EAAAA,gBAAgB,EAAEV,SAAS,CAACe,IAAV,CAAeF,UAThB,CAUjB;;AAViB,CAAnB;AAaA,eAAeZ,MAAf","sourcesContent":["import React from \"react\";\nimport \"../style/Filter.css\";\nimport SelectRover from \"../components/SelectRover\";\nimport SelectCamera from \"../components/SelectCamera\";\n// import SelectSol from \"../components/SelectSol\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({\n  imgs,\n  isCButtonActive,\n  isOButtonActive,\n  isSButtonActive,\n  handleCButton,\n  handleOButton,\n  handleSButton,\n  handleSelectOption,\n  handleSubmitData,\n  // handleSolDay,\n}) {\n  // const [isCButtonActive, setCButtonActive] = useState(false);\n  // const [isOButtonActive, setOButtonActive] = useState(false);\n  // const [isSButtonActive, setSButtonActive] = useState(false);\n\n  // const [camera, setCamera] = useState({\n  //   Curiosity: [],\n  //   Opportunity: [],\n  //   Spirit: [],\n  // });\n\n  // // console.log(\"camera\", camera);\n  // /**\n  //  * handleSelectOption function handles the form of the selected cameras in \"SelectCamera.js\" component\n  //  * @param {*} e is event\n  //  */\n  // const handleSelectOption = (e) => {\n  //   const { name, checked } = e.target;\n  //   // const { Curiosity, Opportunity, Spirit} = camera;\n\n  //   console.log(`${name} is ${checked}`);\n\n  //   // Case 1 : The user checks the box\n  //   if (checked) {\n  //     if (isCButtonActive) {\n  //       setCamera({ ...camera, Curiosity: [...camera.Curiosity, name] });\n  //     }\n  //     if (isOButtonActive) {\n  //       setCamera({ ...camera, Opportunity: [...camera.Opportunity, name] });\n  //     }\n  //     if (isSButtonActive) {\n  //       setCamera({ ...camera, Spirit: [...camera.Spirit, name] });\n  //     }\n  //   }\n  //   // Case 2  : The user unchecks the box\n  //   else {\n  //     setCamera({\n  //       Curiosity: camera.Curiosity.filter((e) => e !== name),\n  //       Opportunity: camera.Opportunity.filter((e) => e !== name),\n  //       Spirit: camera.Spirit.filter((e) => e !== name),\n  //     });\n  //   }\n  // };\n\n  // const handleSubmitData = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submitted values\", camera);\n  // };\n\n  // /** handle button functions toggle button activation when Rovers are selected or deselected */\n  // const handleCButton = () => {\n  //   isCButtonActive ? setCButtonActive(false) : setCButtonActive(true);\n  // };\n\n  // const handleOButton = () => {\n  //   isOButtonActive ? setOButtonActive(false) : setOButtonActive(true);\n  // };\n\n  // const handleSButton = () => {\n  //   isSButtonActive ? setSButtonActive(false) : setSButtonActive(true);\n  // };\n\n  //functions passed as props to children components\n  return (\n    <div className=\"Filter\">\n      <SelectRover\n        isCButtonActive={isCButtonActive}\n        isOButtonActive={isOButtonActive}\n        isSButtonActive={isSButtonActive}\n        handleCButton={handleCButton}\n        handleOButton={handleOButton}\n        handleSButton={handleSButton}\n      />\n      <SelectCamera\n        imgs={imgs}\n        isCButtonActive={isCButtonActive}\n        isOButtonActive={isOButtonActive}\n        isSButtonActive={isSButtonActive}\n        handleSelectOption={handleSelectOption}\n        handleSubmitData={handleSubmitData}\n        // handleSolDay={handleSolDay}\n      />\n      {/* <SelectSol /> */}\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  imgs: PropTypes.array.isRequired,\n  isCButtonActive: PropTypes.bool.isRequired,\n  isOButtonActive: PropTypes.bool.isRequired,\n  isSButtonActive: PropTypes.bool.isRequired,\n  handleCButton: PropTypes.func.isRequired,\n  handleOButton: PropTypes.func.isRequired,\n  handleSButton: PropTypes.func.isRequired,\n  handleSelectOption: PropTypes.func.isRequired,\n  handleSubmitData: PropTypes.func.isRequired,\n  // handleSolDay: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}