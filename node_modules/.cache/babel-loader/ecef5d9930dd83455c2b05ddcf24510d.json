{"ast":null,"code":"var _jsxFileName = \"/Users/benson/NASA-Mars-Rover/marsFrontGroup/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import Home from \"./Home\";\n\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\nimport Home from \"./Home\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [faveIdToImage, setFaveIdToImage] = useState(new Map());\n  const [roverToImage, setRoverToImage] = useState(new Map([[\"curiosity\", []], [\"opportunity\", []], [\"spirit\", []]]));\n  let imgs = [];\n\n  for (let value of roverToImage.values()) {\n    imgs = imgs.concat(value);\n  }\n\n  console.log(imgs);\n  const [isCButtonActive, setCButtonActive] = useState(false);\n  const [isOButtonActive, setOButtonActive] = useState(false);\n  const [isSButtonActive, setSButtonActive] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [camera, setCamera] = useState([]);\n  const [roverToCamera, setRoverToCamera] = useState(new Map([[\"curiosity\", []], [\"opportunity\", []], [\"spirit\", []]]));\n  const [solDay, setSolDay] = useState(1000);\n  console.log(solDay);\n  /**\n   * function that gets http request\n   * @param {*} cam is the rover (string)\n   */\n\n  function getReq(_rover) {\n    if (roverToCamera.get(_rover).length > 0) {\n      return axios.get(`https://api.nasa.gov/mars-photos/api/v1/rovers/${_rover}/photos?sol=${solDay}&api_key=c1FNqfNYAzqQKjJ6clG3rXbXzXFeCtGbVlZU0O1K`).then(res => {\n        console.log(\"roverToImage\", roverToImage);\n        return res.data.photos.filter(i => {\n          if (roverToCamera.get(_rover).includes(i.camera.name)) {\n            return true;\n          }\n\n          return false;\n        });\n      }).catch(err => console.log(err));\n    }\n\n    return [];\n  }\n\n  console.log(roverToCamera);\n  useEffect(() => {\n    const fetchData = async () => {\n      const [imgsC, imgsO, imgsS] = await Promise.all([getReq(\"curiosity\"), getReq(\"opportunity\"), getReq(\"spirit\")]);\n      let tempMap = new Map();\n      tempMap.set(\"curiosity\", imgsC);\n      tempMap.set(\"opportunity\", imgsO);\n      tempMap.set(\"spirit\", imgsS);\n      setRoverToImage(tempMap);\n    };\n\n    fetchData();\n  }, [solDay, roverToCamera]);\n  console.log(imgs);\n  /**\n   * handleSelectOption function handles the form of the selected cameras in \"SelectCamera.js\" component\n   * @param {*} e is event\n   */\n\n  const handleSelectOption = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    console.log(`${name} is ${checked}`); // Case 1 : The user checks the box\n\n    if (checked) {\n      setCamera([...camera, name]);\n    } // Case 2  : The user unchecks the box\n    else {\n      setCamera(camera.filter(e => e !== name));\n    }\n  };\n  /**\n   * function that handles data when form is submitted\n   * @param {*} e\n   */\n\n\n  const handleSubmitData = e => {\n    e.preventDefault();\n\n    if (e.target.sol.value <= 0) {\n      setSolDay(solDay);\n    } else {\n      setSolDay(e.target.sol.value);\n    }\n\n    let tempRover = new Map();\n\n    if (!isCButtonActive) {\n      tempRover.set(\"curiosity\", []);\n    } else {\n      tempRover.set(\"curiosity\", camera.filter(e => {\n        if (e !== \"PANCAM\" && e !== \"MINITES\") {\n          return true;\n        }\n\n        return false;\n      }));\n    }\n\n    if (!isOButtonActive) {\n      tempRover.set(\"opportunity\", []);\n    } else {\n      tempRover.set(\"opportunity\", camera.filter(e => e !== \"MAST\" && e !== \"CHEMCAM\" && e !== \"MAHLI\" && e !== \"MARDI\"));\n    }\n\n    if (!isSButtonActive) {\n      tempRover.set(\"spirit\", []);\n    } else {\n      tempRover.set(\"spirit\", camera.filter(e => e !== \"MAST\" && e !== \"CHEMCAM\" && e !== \"MAHLI\" && e !== \"MARDI\"));\n    }\n\n    setRoverToCamera(tempRover);\n    setSubmit(true);\n    console.log(\"Submitted values\", camera);\n  };\n  /**\n   * When \"Home\" of navbar gets clicked, toggle the rendering of the page\n   * and reset roverToCamera selection and reset Rover selection buttons\n   */\n\n\n  const handleSubmit = () => {\n    //toggle rendering\n    setSubmit(false); //reset roverToCamera selection\n\n    setRoverToCamera(new Map([[\"curiosity\", []], [\"opportunity\", []], [\"spirit\", []]]));\n    setRoverToImage(new Map([[\"curiosity\", []], [\"opportunity\", []], [\"spirit\", []]])); //toggle button (reset)\n\n    setCButtonActive(false);\n    setOButtonActive(false);\n    setSButtonActive(false);\n  };\n  /** handle button functions toggle button activation when Rovers are selected or deselected */\n\n\n  const handleCButton = () => {\n    isCButtonActive ? setCButtonActive(false) : setCButtonActive(true);\n  };\n\n  const handleOButton = () => {\n    isOButtonActive ? setOButtonActive(false) : setOButtonActive(true);\n  };\n\n  const handleSButton = () => {\n    isSButtonActive ? setSButtonActive(false) : setSButtonActive(true);\n  }; //functions passed as props to children components\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), submit ? /*#__PURE__*/_jsxDEV(Home, {\n      imgs: imgs,\n      faveIdToImage: faveIdToImage,\n      setFaveIdToImage: setFaveIdToImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Filter, {\n      imgs: imgs,\n      isCButtonActive: isCButtonActive,\n      isOButtonActive: isOButtonActive,\n      isSButtonActive: isSButtonActive,\n      handleCButton: handleCButton,\n      handleOButton: handleOButton,\n      handleSButton: handleSButton,\n      handleSelectOption: handleSelectOption,\n      handleSubmitData: handleSubmitData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"j3GC3BCvKMhgA9F1XplG2Q0XqjQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/benson/NASA-Mars-Rover/marsFrontGroup/src/pages/Main.js"],"names":["React","useState","useEffect","Filter","axios","Home","Navbar","Main","faveIdToImage","setFaveIdToImage","Map","roverToImage","setRoverToImage","imgs","value","values","concat","console","log","isCButtonActive","setCButtonActive","isOButtonActive","setOButtonActive","isSButtonActive","setSButtonActive","submit","setSubmit","camera","setCamera","roverToCamera","setRoverToCamera","solDay","setSolDay","getReq","_rover","get","length","then","res","data","photos","filter","i","includes","name","catch","err","fetchData","imgsC","imgsO","imgsS","Promise","all","tempMap","set","handleSelectOption","e","checked","target","handleSubmitData","preventDefault","sol","tempRover","handleSubmit","handleCButton","handleOButton","handleSButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import Home from \"./Home\";\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\nimport Home from \"./Home\";\nimport Navbar from \"../components/Navbar\";\n\nfunction Main() {\n  const [faveIdToImage, setFaveIdToImage] = useState(new Map());\n  const [roverToImage, setRoverToImage] = useState(\n    new Map([\n      [\"curiosity\", []],\n      [\"opportunity\", []],\n      [\"spirit\", []],\n    ])\n  );\n\n  let imgs = [];\n  for (let value of roverToImage.values()) {\n    imgs = imgs.concat(value);\n  }\n  console.log(imgs);\n\n  const [isCButtonActive, setCButtonActive] = useState(false);\n  const [isOButtonActive, setOButtonActive] = useState(false);\n  const [isSButtonActive, setSButtonActive] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [camera, setCamera] = useState([]);\n  const [roverToCamera, setRoverToCamera] = useState(\n    new Map([\n      [\"curiosity\", []],\n      [\"opportunity\", []],\n      [\"spirit\", []],\n    ])\n  );\n\n  const [solDay, setSolDay] = useState(1000);\n  console.log(solDay);\n  /**\n   * function that gets http request\n   * @param {*} cam is the rover (string)\n   */\n  function getReq(_rover) {\n    if (roverToCamera.get(_rover).length > 0) {\n      return axios\n        .get(\n          `https://api.nasa.gov/mars-photos/api/v1/rovers/${_rover}/photos?sol=${solDay}&api_key=c1FNqfNYAzqQKjJ6clG3rXbXzXFeCtGbVlZU0O1K`\n        )\n        .then((res) => {\n          console.log(\"roverToImage\", roverToImage);\n          return res.data.photos.filter((i) => {\n            if (roverToCamera.get(_rover).includes(i.camera.name)) {\n              return true;\n            }\n            return false;\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n    return [];\n  }\n  console.log(roverToCamera);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [imgsC, imgsO, imgsS] = await Promise.all([\n        getReq(\"curiosity\"),\n        getReq(\"opportunity\"),\n        getReq(\"spirit\"),\n      ]);\n      let tempMap = new Map();\n      tempMap.set(\"curiosity\", imgsC);\n      tempMap.set(\"opportunity\", imgsO);\n      tempMap.set(\"spirit\", imgsS);\n      setRoverToImage(tempMap);\n    };\n    fetchData();\n  }, [solDay, roverToCamera]);\n  console.log(imgs);\n  /**\n   * handleSelectOption function handles the form of the selected cameras in \"SelectCamera.js\" component\n   * @param {*} e is event\n   */\n  const handleSelectOption = (e) => {\n    const { name, checked } = e.target;\n\n    console.log(`${name} is ${checked}`);\n\n    // Case 1 : The user checks the box\n    if (checked) {\n      setCamera([...camera, name]);\n    }\n    // Case 2  : The user unchecks the box\n    else {\n      setCamera(camera.filter((e) => e !== name));\n    }\n  };\n\n  /**\n   * function that handles data when form is submitted\n   * @param {*} e\n   */\n  const handleSubmitData = (e) => {\n    e.preventDefault();\n\n    if (e.target.sol.value <= 0) {\n      setSolDay(solDay);\n    } else {\n      setSolDay(e.target.sol.value);\n    }\n\n    let tempRover = new Map();\n\n    if (!isCButtonActive) {\n      tempRover.set(\"curiosity\", []);\n    } else {\n      tempRover.set(\n        \"curiosity\",\n        camera.filter((e) => {\n          if (e !== \"PANCAM\" && e !== \"MINITES\") {\n            return true;\n          }\n          return false;\n        })\n      );\n    }\n\n    if (!isOButtonActive) {\n      tempRover.set(\"opportunity\", []);\n    } else {\n      tempRover.set(\n        \"opportunity\",\n        camera.filter(\n          (e) =>\n            e !== \"MAST\" && e !== \"CHEMCAM\" && e !== \"MAHLI\" && e !== \"MARDI\"\n        )\n      );\n    }\n    if (!isSButtonActive) {\n      tempRover.set(\"spirit\", []);\n    } else {\n      tempRover.set(\n        \"spirit\",\n        camera.filter(\n          (e) =>\n            e !== \"MAST\" && e !== \"CHEMCAM\" && e !== \"MAHLI\" && e !== \"MARDI\"\n        )\n      );\n    }\n    setRoverToCamera(tempRover);\n\n    setSubmit(true);\n    console.log(\"Submitted values\", camera);\n  };\n\n  /**\n   * When \"Home\" of navbar gets clicked, toggle the rendering of the page\n   * and reset roverToCamera selection and reset Rover selection buttons\n   */\n  const handleSubmit = () => {\n    //toggle rendering\n    setSubmit(false);\n    //reset roverToCamera selection\n    setRoverToCamera(\n      new Map([\n        [\"curiosity\", []],\n        [\"opportunity\", []],\n        [\"spirit\", []],\n      ])\n    );\n\n    setRoverToImage(\n      new Map([\n        [\"curiosity\", []],\n        [\"opportunity\", []],\n        [\"spirit\", []],\n      ])\n    );\n\n    //toggle button (reset)\n    setCButtonActive(false);\n    setOButtonActive(false);\n    setSButtonActive(false);\n  };\n\n  /** handle button functions toggle button activation when Rovers are selected or deselected */\n  const handleCButton = () => {\n    isCButtonActive ? setCButtonActive(false) : setCButtonActive(true);\n  };\n\n  const handleOButton = () => {\n    isOButtonActive ? setOButtonActive(false) : setOButtonActive(true);\n  };\n\n  const handleSButton = () => {\n    isSButtonActive ? setSButtonActive(false) : setSButtonActive(true);\n  };\n\n  //functions passed as props to children components\n  return (\n    <div className=\"Main\">\n      <Navbar handleSubmit={handleSubmit} />\n      {submit ? (\n        <Home imgs={imgs} faveIdToImage={faveIdToImage} setFaveIdToImage={setFaveIdToImage} />\n      ) : (\n        <Filter\n          imgs={imgs}\n          isCButtonActive={isCButtonActive}\n          isOButtonActive={isOButtonActive}\n          isSButtonActive={isSButtonActive}\n          handleCButton={handleCButton}\n          handleOButton={handleOButton}\n          handleSButton={handleSButton}\n          handleSelectOption={handleSelectOption}\n          handleSubmitData={handleSubmitData}\n        />\n      )}\n      {/* <Home imgs ={imgs} /> */}\n    </div>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}